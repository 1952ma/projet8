name: Deploy to AWS EC2

on:
  push:
    branches:
      - main  # Changez la branche si nécessaire

jobs:
  deploy:
    runs-on: ubuntu-latest  # Utilise un runner GitHub Actions basé sur Ubuntu

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4  # Récupère le code source

      - name: Deploy to EC2
        uses: appleboy/scp-action@master  # Utilise l'action pour copier des fichiers via SCP
        with:
          host: ec2-50-17-32-22.compute-1.amazonaws.com  # Remplacez par l'adresse de votre instance EC2
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}  # La clé privée SSH, à ajouter comme secret dans votre dépôt GitHub
          source: "."  # Tous les fichiers du projet
          target: "/home/ubuntu/projet7"  # Répertoire cible sur l'EC2

      - name: Execute Remote Commands
        uses: appleboy/ssh-action@master  # Utilise l'action pour exécuter des commandes SSH
        with:
          host: ec2-50-17-32-22.compute-1.amazonaws.com
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/projet8  # Naviguer vers le projet
            git pull origin main  # Mettre à jour avec la dernière version du dépôt
            source myenv/bin/activate  # Activer l'environnement virtuel
            pip install -r requirements.txt  # Installer les dépendances
            cd api  # Accéder au sous-dossier api
            nohup uvicorn fastapi_app:app --host 0.0.0.0 --port 8000 --reload &  # Relancer l'application FastAPI en arrière-plan
            nohup streamlit run streamlit_app.py &  # Relancer l'application Streamlit en arrière-plan


